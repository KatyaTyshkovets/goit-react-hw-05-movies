{"version":3,"file":"static/js/457.6f1f2fb0.chunk.js","mappings":"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","sources":["components/MovieCategory/Genres/Genres.jsx","components/MovieCategory/MovieData.jsx","components/MovieDetails/MovieDetailAction.jsx","pages/MovieDetails.jsx","services/movieApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst List = styled.ul`\n  display: flex;\n  list-style: none;\n  padding-left: 0;\n`;\n\nconst Item = styled.li`\n  font-weight: 400;\n  text-shadow: 1px 2px 1px 0px #000000; color: #f9f5ed;\n  &:not(: last-child) {\n    margin-right: 15px;\n  }\n`;\n\n const Genres = ({ genres }) => {\n  return (\n    <List>\n      {genres.map(({ id, name }) => (\n        <Item key={id} id={id}>\n          {name}\n        </Item>\n      ))}\n    </List>\n  );\n };\n\n export default Genres\n","import styled from 'styled-components';\nimport imagePlaceholder from '../../images/imagePlaceholder.jpg'\nimport Genres from './Genres';\n\n\nconst Container = styled.div`\n  display: flex;\n`;\n\n\nconst Image = styled.img`\n  border-radius: 4px;\n  margin-right: 15px;\n  width: 250px;\n  height: 350px;\n`;\n\nconst Title = styled.h2`\nfont-size: 36px;\n  margin-bottom: 40px;\n  text-shadow: 1px 2px 1px 0px #000000; color: #f9f5ed;\n`;\nconst Text = styled.p`\n  font-weight: 400;\n  text-shadow: 1px 2px 1px 0px #000000; color: #f9f5ed;\n`;\n\nconst Span = styled.span`\n  font-weight: 700;\n  text-shadow: 1px 2px 1px 0px #000000; color: #f9f5ed;\n`;\n\n\nconst MovieData = ({ movie }) => {\n  const { title, poster_path, vote_average, overview, genres, release_date } =\n    movie;\n  return (\n    <>\n      <Container>\n        <Image\n         src= {\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : imagePlaceholder\n          }\n         \n          alt={title}\n        />\n        <div>\n          <Title>\n            {title}({new Date(release_date).getFullYear()})\n          </Title>\n          <Text>\n            <Span>Rated : </Span>\n            {vote_average}\n          </Text>\n          <Text>\n            <Span>Overview</Span>\n            <br />\n            {overview}\n          </Text>\n          <Span>Genres</Span>\n          {genres && <Genres genres={genres} />}\n        </div>\n      </Container>\n    </>\n  );\n};\n\n\n\nexport default MovieData;","import { useLocation, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  margin: 0 auto;\n`;\n\nconst Link = styled(NavLink)`\n  padding: 8px 16px;\n  margin: 10px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  background-color: silver;\n  font-weight: 500;\n  border: none;\n  cursor: pointer;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: rgb(0 0 0 / 20%) 0px 2px 4px -1px,\n    rgb(0 0 0 / 14%) 0px 4px 5px 0px, rgb(0 0 0 / 12%) 0px 1px 10px 0px;\n  &:hover {\n    opacity: 1;\n  }\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n`;\n\n const MovieDetailAction = () => {\n  const location = useLocation().state?.from;\n\n  return (\n    <Container>\n      <Link to={'cast'} state={{ from: location }}>\n        Cast\n      </Link>\n      <Link to={'reviews'} state={{ from: location }}>\n        Reviews\n      </Link>\n    </Container>\n  );\n};\n\n\n\nexport default MovieDetailAction","import { fetchDataMovie } from '../services/movieApi';\nimport { useEffect, useState } from 'react';\nimport { useParams, Outlet, NavLink, useLocation } from 'react-router-dom';\nimport  MovieData  from '../components/MovieCategory/MovieData';\nimport MovieDetailAction from '../components/MovieDetails/MovieDetailAction';\nimport styled from 'styled-components';\nimport {TbArrowBigLeftLines} from 'react-icons/tb'\n\nconst Link = styled(NavLink)`\n  \n  color: silver;\n  border: none;\n  cursor: pointer;\n  \n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  \n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst MovieDetails = () => {\n  const [data, setData] = useState([]);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    fetchDataMovie(movieId).then(data => {\n      setData(data);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkHref}>\n        <TbArrowBigLeftLines size={50}/>\n      </Link>\n      <MovieData movie={data} />\n      <MovieDetailAction />\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from \"axios\"; \nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n  export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '8abe8a7c56a54bb229ee6bb6e75e30d4';\n\n\n\nexport const api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\n\nexport const fetchMovieById = async id => {\n  try {\n    const { data } = await api.get(`movie/${id}`);\n    return data;\n  } catch (error) {\n    toast.error('Something went wrong');\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const { data } = await api.get(`/movie/${id}/credits`);\n    return data;\n  } catch (error) {\n    toast.error('Something went wrong');\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    const { data } = await api.get(`/movie/${id}/reviews`);\n    return data;\n  } catch (error) {\n    toast.error('Something went wrong');\n  }\n};\n\nexport const fetchSearchMovies = async query => {\n  try {\n    const { data } = await api.get('/search/movie', { params: query });\n    return data;\n  } catch (error) {\n    toast.error('Something went wrong');\n  }\n};\n\nexport const fetchMovieTrending = async () => {\n  try {\n    const { data } = await api.get('/trending/all/day');\n    return data;\n  } catch (error) {\n    toast.error('Something went wrong');\n  }\n};\n\nexport const fetchDataMovie = async id => {\n  try {\n    const { data } = await api.get(`movie/${id}`);\n    return data;\n  } catch (e) {\n    toast.error('Sorry please try again');\n  }\n};"],"names":["List","styled","Item","genres","map","id","name","Container","Image","Title","Text","Span","movie","title","poster_path","vote_average","overview","release_date","src","imagePlaceholder","alt","Date","getFullYear","Link","NavLink","location","useLocation","state","from","to","useState","data","setData","movieId","useParams","backLinkHref","useEffect","fetchDataMovie","then","size","api","axios","baseURL","params","api_key","fetchMovieCast","get","toast","fetchMovieReviews","fetchSearchMovies","query","fetchMovieTrending"],"sourceRoot":""}