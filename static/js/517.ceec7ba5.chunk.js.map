{"version":3,"file":"static/js/517.ceec7ba5.chunk.js","mappings":"6QAMMA,EAAOC,EAAAA,GAAAA,GAAH,qJASJC,EAAOD,EAAAA,GAAAA,GAAH,6CAIJE,EAAQF,EAAAA,GAAAA,IAAH,4EAKLG,EAAOH,EAAAA,GAAAA,EAAH,qGAmCV,EA9BiB,SAAC,GAAa,IAAZI,EAAW,EAAXA,MAEf,OACI,8BACKA,IACG,SAACL,EAAD,UACKK,EAAMC,KAAI,SAAAC,GACP,OACI,UAACL,EAAD,YACI,SAACC,EAAD,CACIK,IACdD,EAAME,aAAN,yCACsCF,EAAME,cACxCC,EAEUC,IAAKJ,EAAMK,QAEf,SAACR,EAAD,UAAOG,EAAMK,SATNL,EAAMM,QAYxB,OAQpB,ECnCD,EAjBa,WACX,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOT,EAAP,KAAcU,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,GAASI,MAAK,SAAAC,GAC3BN,EAASM,EAAKC,KACf,GACF,GAAE,CAACN,IAEGX,GAASA,EAAMkB,OAAS,GACzB,SAAC,EAAD,CAAUlB,MAAOA,KAEb,mEAEX,C,6MCVYmB,G,QAAMC,IAAAA,OAAa,CAC9BC,QANwB,+BAOxBC,OAAQ,CACNC,QAPmB,uCAqBVT,EAAc,yCAAG,WAAMU,GAAN,uGAEHL,EAAIM,IAAJ,iBAAkBD,EAAlB,aAFG,uBAElBR,EAFkB,EAElBA,KAFkB,kBAGnBA,GAHmB,gCAK1BU,EAAAA,GAAAA,MAAY,wBALc,yDAAH,sDASdC,EAAiB,yCAAG,WAAMH,GAAN,uGAENL,EAAIM,IAAJ,iBAAkBD,EAAlB,aAFM,uBAErBR,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,gCAK7BU,EAAAA,GAAAA,MAAY,wBALiB,yDAAH,sDASjBE,EAAiB,yCAAG,WAAMC,GAAN,uGAENV,EAAIM,IAAI,gBAAiB,CAAEH,OAAQO,IAF7B,uBAErBb,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,gCAK7BU,EAAAA,GAAAA,MAAY,wBALiB,yDAAH,sDASjBI,EAAkB,yCAAG,oHAEPX,EAAIM,IAAI,qBAFD,uBAEtBT,EAFsB,EAEtBA,KAFsB,kBAGvBA,GAHuB,gCAK9BU,EAAAA,GAAAA,MAAY,wBALkB,yDAAH,qDASlBK,EAAc,yCAAG,WAAMP,GAAN,uGAEHL,EAAIM,IAAJ,gBAAiBD,IAFd,uBAElBR,EAFkB,EAElBA,KAFkB,kBAGnBA,GAHmB,gCAK1BU,EAAAA,GAAAA,MAAY,0BALc,yDAAH,qD","sources":["components/MovieCast/CastList.jsx","pages/Cast.jsx","services/movieApi.jsx"],"sourcesContent":["\nimport PropTypes from 'prop-types';\nimport imagePlaceholder from '../../images/imagePlaceholder.jpg';\nimport styled from \"styled-components\";\n\n\nconst List = styled.ul`\npadding: 0;\nlist-style-type: none;\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\njustify-content: space-around;\n`;\n\nconst Item = styled.li`\nmargin-bottom:15px;\n`;\n\nconst Image = styled.img`\nwidth: 150px;\nheight: 200px;\nborder-radius: 7px;\n`;\nconst Name = styled.p`\nmargin-bottom: 5px; \ntext-shadow: 1px 2px 1px 0px #000000; color: #f9f5ed;\n`;\n\nconst CastList = ({casts}) => {\n   \n    return (\n        <>\n            {casts && (\n                <List>\n                    {casts.map(actor => {\n                        return (\n                            <Item key={actor.cast_id}>\n                                <Image\n                                    src={\n                      actor.profile_path\n                        ? `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n                        : imagePlaceholder\n                    }\n                                    alt={actor.name}\n                                />\n                                <Name>{actor.name}</Name>\n                            </Item>\n                        );\n                    })}\n                </List>\n                \n            )}\n           \n        </>\n    )\n\n}\n\nexport default CastList;\n\nCastList.propTypes = {\n    cast: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../services/movieApi';\nimport CastList from 'components/MovieCast/CastList';\n\nconst Cast = () => {\n  const [casts, setCasts] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieCast(movieId).then(data => {\n      setCasts(data.cast);\n    });\n  }, [movieId]);\n\n  return casts && casts.length > 0 ? (\n        <CastList casts={casts} />\n    ) : (\n            <h2> We don't have any cast for this movie.</h2>\n    )\n};\n\nexport default Cast;\n","import axios from \"axios\"; \nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n  export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '8abe8a7c56a54bb229ee6bb6e75e30d4';\n\n\n\nexport const api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\n\nexport const fetchMovieById = async id => {\n  try {\n    const { data } = await api.get(`movie/${id}`);\n    return data;\n  } catch (error) {\n    toast.error('Something went wrong');\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const { data } = await api.get(`/movie/${id}/credits`);\n    return data;\n  } catch (error) {\n    toast.error('Something went wrong');\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    const { data } = await api.get(`/movie/${id}/reviews`);\n    return data;\n  } catch (error) {\n    toast.error('Something went wrong');\n  }\n};\n\nexport const fetchSearchMovies = async query => {\n  try {\n    const { data } = await api.get('/search/movie', { params: query });\n    return data;\n  } catch (error) {\n    toast.error('Something went wrong');\n  }\n};\n\nexport const fetchMovieTrending = async () => {\n  try {\n    const { data } = await api.get('/trending/all/day');\n    return data;\n  } catch (error) {\n    toast.error('Something went wrong');\n  }\n};\n\nexport const fetchDataMovie = async id => {\n  try {\n    const { data } = await api.get(`movie/${id}`);\n    return data;\n  } catch (e) {\n    toast.error('Sorry please try again');\n  }\n};"],"names":["List","styled","Item","Image","Name","casts","map","actor","src","profile_path","imagePlaceholder","alt","name","cast_id","useState","setCasts","movieId","useParams","useEffect","fetchMovieCast","then","data","cast","length","api","axios","baseURL","params","api_key","id","get","toast","fetchMovieReviews","fetchSearchMovies","query","fetchMovieTrending","fetchDataMovie"],"sourceRoot":""}